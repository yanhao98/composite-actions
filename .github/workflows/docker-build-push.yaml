on:
  pull_request:
    paths:
      - "docker-build-push/**"
      - ".github/workflows/docker-build-push.yaml"
  push:
    paths:
      - "docker-build-push/**"
      - ".github/workflows/docker-build-push.yaml"
env:
  TZ: Asia/Shanghai

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: yanhao98/composite-actions/docker-build-push@main
        id: docker-build-push
        with:
          file: ./Dockerfile.test
          platforms: linux/amd64,linux/arm64
          push: true
          load: false
          meta_images: |
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/docker-example
            ghcr.io/${{ github.repository }}
          meta_tags: | # https://github.com/docker/metadata-action
            type=raw,value=latest,enable=true

  docker-load:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: yanhao98/composite-actions/docker-build-push@main
        id: docker-build-push
        with:
          file: ./Dockerfile.test
          platforms: linux/amd64
          load: true
          build-args: |
            SHA=${{ github.sha }}
      - name: Check Docker image
        run: |
          set -x;
          docker images;
          docker run --rm ${{ steps.docker-build-push.outputs.imageid }} cat /root/sha.txt;


# TODO: semantic-release-action 相关的搞到 `examples/semantic-release-action-example` 里
  # - uses: actions/checkout@main
  # - uses: yanhao98/semantic-release-action@main
  #   id: semantic


# if: steps.semantic.outputs.next_release_published == 'true'
# if: steps.semantic.outputs.next_release_published == 'true'
# if: steps.semantic.outputs.next_release_published == 'true'
# type=semver,pattern={{version}},value=${{ steps.semantic.outputs.next_release_version }}
# type=semver,pattern={{major}}.{{minor}},value=${{ steps.semantic.outputs.next_release_version }}
# type=semver,pattern={{major}},value=${{ steps.semantic.outputs.next_release_version }}


# cache-from: type=gha
# cache-to: type=gha,mode=max
# cache-from: type=local,src=/tmp/.buildx-cache
# cache-to: type=local,dest=/tmp/.buildx-cache
